# Notes:
# A sample z/OS DBB workflow using GitHub Actions (GHA) with SSH connection

name: Demo-DBB_Build_on_ZOS_With_GitHub_Actions_SSH

#Global Vars
env:
  # SSH connection information
  DBB_Host: 'ssh SACHIN@TVT6031.svl.ibm.com' # A valid SSH account on Z. With pre-generated and tested keys in the runner.
# Pipeline scripts on z/OS (relative to the SSH user's Home Dir in USS)
  Clone: 'All-pipeline-scripts/git-clone-ssh.sh' # Script to clone the code from GitHub to z/OS
  DBB_Build: 'All-pipeline-scripts/dbb-build.sh' # Script to perform the DBB build on z/OS

# Controls when the workflow will run
# "on" trigger to manually start this workflow. Can add "pull, push..." for auto trigger.
# see https://docs.github.com/en/actions/learn-github-actions/contexts
on: 
#workflow_dispatch
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
 #   branches: [ "main" ]
 # pull_request:
 #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  DBB_Build_on_zOS:
    runs-on: self-hosted
    env:
      # Project related variables. GHA automatically fills in relevant repository information for values enclosed in ${{ ... }}.
      MyRepo: git@github.com:${{ github.repository }}.git # Source code repository URL (SSH)
      MyBranch: ${{ github.ref }} # Branch on which to run the GHA pipeline
      MyWorkDir: tmp/ghActions/ghAction_poc-workspace_run_${{ github.run_number }} # Absolute path to directory for storing the clone and build outputs
      MyWorkSpace: /u/sachin/ghAction_poc-workspace # Absolute path to workspace (root) directory containing all required source directories
      MyApplication: ghAction-poc-app # Application directory name (relative to MyWorkSpace)
      MyHlq: SACHIN.SSH # High level qualifier for partitioned data sets created during the build
    steps:
      - name: Clone repository
        run: ${{ env.DBB_Host }} ${{ env.Clone }} ${{ env.MyRepo }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyBranch }}
      - name: DBB Impact Build
        run: ${{ env.DBB_Host }} ${{ env.DBB_Build }} ${{ env.MyWorkDir }} ${{ env.MyWorkSpace }} ${{ env.MyApplication }} ${{ env.MyHlq }} --impactBuild

  # This workflow contains a single job called "build"
  #build:
    # The type of runner that the job will run on
   # runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    #steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
     # - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      #- name: Run a one-line script
       # run: echo Hello, world!

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
       # run: |
        #  echo Add other actions to build,
         # echo test, and deploy your project.
